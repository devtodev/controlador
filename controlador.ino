#define PIN_BUS_LED   13

int sw = 0;
int contador = 0;

int recPin = 0;
long baudRate;

byte byteDelBus = 0;

String avisoEnPantalla = "Hola Existo!";

/*
const char FAUBA_logo[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFC, 0xF8, 0xF0, 0xF0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0xFC, 0xFC,
0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFC, 0xF8, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0xFC, 0xFE, 0xFE,
0xFE, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0xF0, 0xF0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF8, 0xFC, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF,
0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF0, 0xF1, 0xE1,
0xE1, 0xE1, 0xE1, 0xE1, 0xF1, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF0,
0x00, 0x00, 0x00, 0x81, 0xF0, 0xF8, 0xF8, 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xF0, 0xE1,
0xE1, 0xE1, 0xE1, 0xE1, 0xF1, 0xF0, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x1F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x3F, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
0x1F, 0x1F, 0x3F, 0x7F, 0x00, 0x00, 0x00, 0x7F, 0x3F, 0x3F, 0x1F, 0x1F, 0x1F, 0x0F, 0x1F, 0x1F,
0x1F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7C, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x78, 0x7C, 0x7C,
0x7E, 0x7E, 0x7E, 0x7E, 0x7C, 0x7C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0x7E,
0x7E, 0x7E, 0x7E, 0x7C, 0x7C, 0x7C, 0x78, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x7C, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x1E, 0x1E, 0x1C,
0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
}; */


void setup()
{
  iniciarControlRemoto();
  iniciarPinesBus();
  LcdInitialise();
  presentacion();
  LcdClear();
  LcdString("*");

}
unsigned int error = 0;
unsigned int timeout = 0;
unsigned int mensajes = 0;
void barrido()
{
  LcdClear();
  LcdString(String(String(error) + "<>" + String(mensajes)));
 unsigned char i = 0;
 delay(2000);
 for (int i = 0; i < 255; i++)
  {
    unsigned long x = 0;
    unsigned char lectura = 0;
    while(lectura != i)
    { 
      LcdClear();
      enviarAlBus(i);
      delay(5);
      mensajes++;
      LcdString(String(String(i) + ">"));
      lectura = 0;
      x = 0;
      while ((x < 42949) &&(lectura == 0)) // se puede producir un time out
      {
        x++;
        lectura = leerDelBus();
        if (lectura != 0)
        {
          LcdString(String(String(lectura) + "."));
          if (lectura != i)
          {
            error++;
            delay(2000);
          }
        }
      }
      if (lectura == 0) 
      { 
        LcdString(String('*'));
        timeout++;
        delay(2000);
      }
      delay(5);
    }
  }
}

unsigned char led1, led2, fondo = 0;
void analizarTecla(unsigned char tecla)
{
   if (tecla == 0) // OnOff
   {
     presentacion();
     return;
   }
   if (tecla == 3) // <<
   {
     fondo = 1;
     return;
   }
   if (tecla == 4) // >>
   {
     fondo = 2;
     return;
   }
   if (tecla == 5) // >||
   {
     fondo = 3;
     return;
   }
   if (tecla == 11) // enter
   {
     LcdClear();
     LcdString("Nuevos: ");
     consultarNuevoSlave();
     return;
   } 
   if (tecla == 8) // eq
   {
     LcdClear();
     LcdString("Tipos: ");
     consultarTipo("01");
     return;
   }
   if (tecla == 20) // 9
   {
     LcdClear();
     LcdString("Switches: 0101");
     setSwitch("01", StringToChar("0101"));
     return;
   }
  if (tecla == 14) // 1
  {
    LcdClear();
    led1++;
    led1 = (led1 > 2)?0:led1;
    LcdString(String("SetLED3: " + String(led1)));
    setLed("03", led1);
    return;
  }
  if (tecla == 13) // 1
  {
    LcdClear();
    led2++;
    led2 = (led2 > 2)?0:led2;
    LcdString(String("SetLED1: " + String(led2)));
    setLed("01", led2);
    return;
  }
}

void presentacion()
{
  LcdClear();
  delay(500);
  gotoXY(5,2);
  LcdString("AGROROBOTS");
  delay(1000);
  LcdClear();
  delay(100);
//  LCDBitmap(FAUBA_logo);
//  delay(3000); 
  LcdClear();
}

void dibujarFondo()
{
  if (fondo == -1)
  {
    LcdClear();
 //   LCDBitmap(FAUBA_logo);
    fondo = 0;
  }
  if (fondo == 2)
  {
    LcdClear();
    gotoXY(5,2);
    LcdString("AGROROBOTS");
    fondo = 0;
  }
}

void loop()
{  
   dibujarFondo();
   char tecla = getTeclaControl();
   if (tecla >= 0)
   {
     analizarTecla(tecla);
     LcdString(avisoEnPantalla);
   }
   char bus = leerDelBus();
   if (bus > 0)
   {
//     analizarTrama
    // LcdString(String(">" + String(bus)));
   } 
//  barrido();
  
}

